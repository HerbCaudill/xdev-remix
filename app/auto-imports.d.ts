/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const Auth: typeof import('@localfirst/auth')
  const AuthProvider: typeof import('@localfirst/auth-provider-automerge-repo')['AuthProvider']
  const Fragment: typeof import('react')['Fragment']
  const Headless: typeof import('@headlessui/react')
  const IconAdjustments: typeof import('~icons/tabler/adjustments.jsx')['default']
  const IconCalendarSmile: typeof import('~icons/tabler/calendar-smile.jsx')['default']
  const IconCircleX: typeof import('~icons/tabler/circle-x.jsx')['default']
  const IconDiscountCheck: typeof import('~icons/tabler/discount-check.jsx')['default']
  const IconExclamationCircle: typeof import('~icons/tabler/exclamation-circle.jsx')['default']
  const IconListCheck: typeof import('~icons/tabler/list-check.jsx')['default']
  const IconLogout2: typeof import('~icons/tabler/logout2.jsx')['default']
  const IconMenu2: typeof import('~icons/tabler/menu2.jsx')['default']
  const IconRun: typeof import('~icons/tabler/run.jsx')['default']
  const IconUser: typeof import('~icons/tabler/user.jsx')['default']
  const IconUsersGroup: typeof import('~icons/tabler/users-group.jsx')['default']
  const Link: typeof import('@remix-run/react')['Link']
  const NavLink: typeof import('@remix-run/react')['NavLink']
  const Outlet: typeof import('@remix-run/react')['Outlet']
  const Repo: typeof import('@automerge/automerge-repo')['Repo']
  const createContext: typeof import('react')['createContext']
  const createRef: typeof import('react')['createRef']
  const cx: typeof import('classnames')['default']
  const forwardRef: typeof import('react')['forwardRef']
  const getShareId: typeof import('@localfirst/auth-provider-automerge-repo')['getShareId']
  const lazy: typeof import('react')['lazy']
  const memo: typeof import('react')['memo']
  const startTransition: typeof import('react')['startTransition']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useEffect: typeof import('react')['useEffect']
  const useId: typeof import('react')['useId']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useLocation: typeof import('@remix-run/react')['useLocation']
  const useMemo: typeof import('react')['useMemo']
  const useNavigate: typeof import('@remix-run/react')['useNavigate']
  const useParams: typeof import('@remix-run/react')['useParams']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useState: typeof import('react')['useState']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTransition: typeof import('react')['useTransition']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Team, User, Device, Base58, UserWithSecrets, DeviceWithSecrets } from '@localfirst/auth'
  import('@localfirst/auth')
  // @ts-ignore
  export type { DocumentId, PeerId, AutomergeUrl } from '@automerge/automerge-repo'
  import('@automerge/automerge-repo')
  // @ts-ignore
  export type { ShareId } from '@localfirst/auth-provider-automerge-repo'
  import('@localfirst/auth-provider-automerge-repo')
}
